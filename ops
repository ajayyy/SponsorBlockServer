{"version":1,"ops":[{"type":6,"author":{"id":"3d6ef91eab30c10183194b15932851feaf517333"},"timestamp":1566839067,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI2ODgzNTA2OQ=="},"target":"c82d7e4c1c21ae41eaa6633f803e7ef447f4763356ec52b092ee458f96c1c46d","message":"As discussed earlier, there are multiple segment types besides sponsor spots. This issue tracks the API changes necessary to implement them.\n\nThere are many things that would ideally be changed, but also new features are implementable without those changes. The minimal set of changes is highlighted with **Minimal change**.\n\nAll renamings imply the creation of new API endpoints without removal of old ones methods\n\n# Database\n- **NO** Rename table `sponsorTimes` into `segmentTimes`\n- [ ] **Minimal change** Add `type` ENUM column with values (to be discussed):\n  - `null` -- type unknown and for backwards compatibility\n  - `\"intro\"` -- for vide intros, usually appear before channel logo (not all channels have this)\n  - `\"sponsor\"` -- for currently tracked sponsors\n  - `\"merch\"` -- channel's custom merch (not an outside sponsor)\n  - `\"social\"` -- We are on Twitter/FaceBook/etc.\n  - `\"buttons\"` -- Comment!/Like!/Subscribe!\n  - `\"patreon\"` -- Only for patreon.com announcements that do not contain \n\nSome of the categories might overlap (`\"sponsor\"` and `\"merch\"`; `\"social\"` and `\"buttons\"` and `\"patreon\"`), but this is intentional and enables finer granularity.\n\n# API\n- [ ] **Minimal change** To current `GET /api/postVideoSponsorTimes` add `type` which is a string (one of recognized types).\n- [ ] Create `GET /api/videoSegmentTimes` to be used instead of `GET /api/getVideoSponsorTimes`\n- [ ] Create `POST /api/videoSegmentTimes` to be used instead of `GET /api/postVideoSponsorTimes`","files":null},{"type":6,"author":{"id":"3d6ef91eab30c10183194b15932851feaf517333"},"timestamp":1566839810,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI2ODg0MTkwOA=="},"target":"c82d7e4c1c21ae41eaa6633f803e7ef447f4763356ec52b092ee458f96c1c46d","message":"As discussed earlier, there are multiple segment types besides sponsor spots. This issue tracks the API changes necessary to implement them.\n\nThere are many things that would ideally be changed, but also new features are implementable without those changes. The minimal set of changes is highlighted with **Minimal change**.\n\nAll renamings imply the creation of new API endpoints without removal of old ones methods\n\n# Database\n- **NO** Rename table `sponsorTimes` into `segmentTimes`\n- [ ] **Minimal change** Add `type` ENUM column with values (to be discussed):\n  - `null` -- type unknown and for backwards compatibility\n  - `\"intro\"` -- for vide intros, usually appear before channel logo (not all channels have this)\n  - `\"sponsor\"` -- for currently tracked sponsors\n  - `\"merch\"` -- channel's custom merch (not an outside sponsor)\n  - `\"social\"` -- We are on Twitter/FaceBook/etc.\n  - `\"buttons\"` -- Comment!/Like!/Subscribe!\n  - `\"patreon\"` -- Only for patreon.com announcements that do not contain \n\nSome of the categories might overlap (`\"sponsor\"` and `\"merch\"`; `\"social\"` and `\"buttons\"` and `\"patreon\"`), but this is intentional and enables finer granularity.\n\n# API\n- [ ] **Minimal change** To current `GET /api/postVideoSponsorTimes` add `type` which is a string (one of recognized types).\n- [ ] Create `GET /api/videoSegmentTimes` to be used instead of `GET /api/getVideoSponsorTimes`\n- [ ] Create `POST /api/videoSegmentTimes` to be used instead of `GET /api/postVideoSponsorTimes`\n- [ ] Update `GET /api/postVideoSponsorTimes` to insert `type = \"sponsor\"`\n- [ ] Ensure `GET /api/getVideoSponsorTimes` returns only segments with `type = \"sponsor\"`","files":null},{"type":6,"author":{"id":"3d6ef91eab30c10183194b15932851feaf517333"},"timestamp":1567306672,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI3MTcwMDcyNg=="},"target":"c82d7e4c1c21ae41eaa6633f803e7ef447f4763356ec52b092ee458f96c1c46d","message":"As discussed earlier, there are multiple segment types besides sponsor spots. This issue tracks the API changes necessary to implement them.\n\nThere are many things that would ideally be changed, but also new features are implementable without those changes. The minimal set of changes is highlighted with **Minimal change**.\n\nAll renamings imply the creation of new API endpoints without removal of old ones methods\n\n# Database\n- **NO** Rename table `sponsorTimes` into `segmentTimes`\n- [ ] **Minimal change** Add `type` ENUM column with values (to be discussed):\n  - `null` -- type unknown and for backwards compatibility\n  - `\"intro\"` -- for vide intros, usually appear before channel logo (not all channels have this)\n  - `\"sponsor\"` -- for currently tracked sponsors\n  - `\"merch\"` -- channel's custom merch (not an outside sponsor)\n  - `\"social\"` -- We are on Twitter/FaceBook/etc.\n  - `\"buttons\"` -- Comment!/Like!/Subscribe!\n  - `\"patreon\"` -- Only for patreon.com announcements that do not contain \n\nSome of the categories might overlap (`\"sponsor\"` and `\"merch\"`; `\"social\"` and `\"buttons\"` and `\"patreon\"`), but this is intentional and enables finer granularity.\n\n# API\n- [ ] **Minimal change** To current `GET /api/postVideoSponsorTimes` add `type` which is a string (one of recognized types).\n- [ ] Create `GET /api/videoSegmentTimes` to be used instead of `GET /api/getVideoSponsorTimes`\n  - [ ] It sends the same data, but with `type`.\n- [ ] Create `POST /api/videoSegmentTimes` to be used instead of `GET /api/postVideoSponsorTimes`\n  - [ ] Use actual JSON instead of URL parameters, allow submitting multiple segments (for the same video). No mechanism for segment deletion yet. Schema:\n    - `userID` -- same as now\n    - `videoID` -- string, same as now\n    - `segments` -- array of Objects like so:\n       - `startTime` -- float, in seconds\n       - `endTime` -- float, in seconds\n       - `type` -- string, one of known types\n- [ ] Update `GET /api/postVideoSponsorTimes` to insert `type = \"sponsor\"`\n- [ ] Ensure `GET /api/getVideoSponsorTimes` returns only segments with `type = \"sponsor\"`","files":null},{"type":6,"author":{"id":"3d6ef91eab30c10183194b15932851feaf517333"},"timestamp":1567380052,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI3MTg4MDc0Mg=="},"target":"c82d7e4c1c21ae41eaa6633f803e7ef447f4763356ec52b092ee458f96c1c46d","message":"As discussed earlier, there are multiple segment types besides sponsor spots. This issue tracks the API changes necessary to implement them.\n\nThere are many things that would ideally be changed, but also new features are implementable without those changes. The minimal set of changes is highlighted with **Minimal change**.\n\nAll renamings imply the creation of new API endpoints without removal of old ones methods\n\n# Database\n- **NO** Rename table `sponsorTimes` into `segmentTimes`\n- [ ] **Minimal change** Add `type` ENUM column with values (to be discussed):\n  - `null` -- type unknown and for backwards compatibility\n  - `\"intro\"` -- for vide intros, usually appear before channel logo (not all channels have this)\n  - `\"sponsor\"` -- for currently tracked sponsors\n  - `\"merch\"` -- channel's custom merch (not an outside sponsor)\n  - `\"social\"` -- We are on Twitter/FaceBook/etc.\n  - `\"buttons\"` -- Comment!/Like!/Subscribe!\n  - `\"patreon\"` -- Only for patreon.com announcements that do not contain \n\nSome of the categories might overlap (`\"sponsor\"` and `\"merch\"`; `\"social\"` and `\"buttons\"` and `\"patreon\"`), but this is intentional and enables finer granularity.\n\n# API\n- [ ] **Minimal change** To current `GET /api/postVideoSponsorTimes` add `type` which is a string (one of recognized types).\n- [ ] Create `GET /api/videoSegmentTimes` to be used instead of `GET /api/getVideoSponsorTimes`\n  - [ ] It sends the same data, but with `type`.\n- [ ] Create `POST /api/videoSegmentTimes` to be used instead of `GET /api/postVideoSponsorTimes`\n  - [ ] Use actual JSON instead of URL parameters, allow submitting multiple segments (for the same video). No mechanism for segment deletion yet. Schema:\n    - `userID` -- same as now\n    - `videoID` -- string, same as now\n    - `segments` -- array of Objects like so:\n       - `startTime` -- float, in seconds\n       - `endTime` -- float, in seconds\n       - `type` -- string, one of known types\n- [ ] Update `GET /api/postVideoSponsorTimes` to insert `type = \"sponsor\"`\n- [ ] Ensure `GET /api/getVideoSponsorTimes` returns only segments with `type = \"sponsor\"`\n\n# NOTE: BEFORE MERGING:\nYou need to update the table to insert the `type` column. Since SQLLite does not have `ENUM`s, it can be `TEXT` type.\n```\nALTER TABLE sponsorTimes ADD \"type\" TEXT;\nUPDATE sponsorTimes SET \"type\"=\"sponsor\";\n```","files":null},{"type":3,"author":{"id":"3708d7e99c169a5d462136cbf424bcd078c353be"},"timestamp":1566839519,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyNDkzNTcyMg==","github-url":"https://github.com/ajayyy/SponsorBlockServer/issues/27#issuecomment-524935722"},"message":"I like this, I don't 100% think renaming the table is necessary though and I feel like that will just add unnecessary complexity.\n\nIf type is undefined, only return the sponsor type.","files":null},{"type":6,"author":{"id":"3708d7e99c169a5d462136cbf424bcd078c353be"},"timestamp":1566839519,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI2ODgzOTUxMA=="},"target":"d5647c414dae24392e4e7cba0c18ae5b9e777958fc62c4ea470eb19c232d8dd6","message":"I like this, I don't 100% think renaming the table is necessary though and I feel like that will just add unnecessary complexity. I think this extension, being called sponsorblock, should have the main focus remain as a sponsor skipping software. So, renaming everything to segment is not really necessary.\n\nIf type is undefined, only return the sponsor type.","files":null},{"type":3,"author":{"id":"8a3a4de710e284b7d4715a0bfd3f3a5f0c974da1"},"timestamp":1566838792,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyNDk0MDQ0NQ==","github-url":"https://github.com/ajayyy/SponsorBlockServer/issues/27#issuecomment-524940445"},"message":"Maybe add something for outro or plugs for other videos on the channel?","files":null},{"type":3,"author":{"id":"3708d7e99c169a5d462136cbf424bcd078c353be"},"timestamp":1566838903,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyNDk0MTE1Nw==","github-url":"https://github.com/ajayyy/SponsorBlockServer/issues/27#issuecomment-524941157"},"message":"should intro/outro be one?","files":null},{"type":3,"author":{"id":"6b1113c918617a216630b279608e8504c591f967"},"timestamp":1566839174,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyNDk0Mjc4OA==","github-url":"https://github.com/ajayyy/SponsorBlockServer/issues/27#issuecomment-524942788"},"message":"Yeah predefined groups of categorys would be good","files":null},{"type":6,"author":{"id":"6b1113c918617a216630b279608e8504c591f967"},"timestamp":1566839174,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI2ODgzNjAwMQ=="},"target":"9ed9a8d634b98afdb8a884d377e7ed67269847c81b69e31c984da6ff8845d9a8","message":"Yeah predefined groups of category's would be good","files":null},{"type":3,"author":{"id":"6b1113c918617a216630b279608e8504c591f967"},"timestamp":1566839233,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyNDk0MzIzNA==","github-url":"https://github.com/ajayyy/SponsorBlockServer/issues/27#issuecomment-524943234"},"message":"Maybe one for \"off-topic\"","files":null},{"type":3,"author":{"id":"6b1113c918617a216630b279608e8504c591f967"},"timestamp":1566839282,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyNDk0MzUwMg==","github-url":"https://github.com/ajayyy/SponsorBlockServer/issues/27#issuecomment-524943502"},"message":"Im guessing bias will be a problem even with ML","files":null},{"type":3,"author":{"id":"3d6ef91eab30c10183194b15932851feaf517333"},"timestamp":1566839293,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyNDk0MzU3OA==","github-url":"https://github.com/ajayyy/SponsorBlockServer/issues/27#issuecomment-524943578"},"message":"@ajayyy \n\u003e If type is undefined, only return the sponsor type.\n\nDo you mean that if the type is not known, then automatically set it to `\"sponsor\"`? That seems strange because what if the user could not classify the segment? Currently, the extension is not aware of `type` so its value does not matter. Going forward, defaulting to `\"sponsor\"` would only add confusion.","files":null},{"type":3,"author":{"id":"3708d7e99c169a5d462136cbf424bcd078c353be"},"timestamp":1566839419,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDUyNDk0NDIzMw==","github-url":"https://github.com/ajayyy/SponsorBlockServer/issues/27#issuecomment-524944233"},"message":"Yes, if the server receives `type === undefined`, then it is an old version of the extension, so only sponsors are being submitted.","files":null},{"type":6,"author":{"id":"3708d7e99c169a5d462136cbf424bcd078c353be"},"timestamp":1566839419,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdDI2ODgzODY3NQ=="},"target":"cdfd9b36024317c29acfbc1c61be93dceb6bd6c5e9460a89ae6297e3ba546c28","message":"Yes, if the server receives `type === undefined`, then it is an old version of the extension, so only sponsors are being submitted.\n\nAs well, when getting sponsors, old versions should only get the sponsor type.","files":null}]}