{"version":1,"ops":[{"type":1,"author":{"id":"51cc80bdfc38f93c3cadc8656d53728cc6e05f64"},"timestamp":1566500698,"metadata":{"github-id":"MDU6SXNzdWU0ODQxNjExNjU=","github-url":"https://github.com/ajayyy/SponsorBlockServer/issues/25","origin":"github"},"title":"Preserve user's privacy with k-anonymity","message":"As I understand, currently, the user submits a video ID (e.g. `dQw4w9WgXcQ`), and gets back a single JSON-object. \n\nHere I propose to add a new endpoint, e.g. `/api/anonymousGetVideoSponsorTimes` that takes the first _n_ (e.g. 5) characters of a hash (sha1 is fine) and returns a list of possible results, like in the example below.\n\nThis approach is used in Troy Hunt's _Have I Been Pwned_ API; see https://www.troyhunt.com/ive-just-launched-pwned-passwords-version-2/ and https://blog.cloudflare.com/validating-leaked-passwords-with-k-anonymity/ for example.\n\n**input**: `{ hash_prefix: \u003csha1sum(\"dQw4w9WgXcQ\").substr(0,5)\u003e }`    \n(e.g. `{ hash_prefix: '3dd08' }`)\n\n**output**:\n```\n[\n {\n  videoID: 'dQw4w9WgXcQ',\n  sponorTimes: array [float],\n  UUIDs: array [string] //The ID for this sponsor time, used to submit votes\n },\n {\n  videoID: 'ah20943fdhj7'\n  sponorTimes: array [float],\n  UUIDs: array [string] //The ID for this sponsor time, used to submit votes\n },\n// ...\n]\n```\n\nSince Youtube IDs are sparse, and furthermore SponsorBlock only has a small part of IDs indexed, each query will return only a small amount of results, if any. If result length were to get out of hands in the future, it would be easy to increase the number of input characters required. \n\nFor performance reasons, the database should grow a new column, `sha1sum`. A pseudo-SQL query for such a request might look like this:\n\n    SELECT * FROM sponsorTimes WHERE sha1sum LIKE '3dd08%'\n\nWhich hashing algorithm is used is not very important, as the user will only send a fraction of the hash to the server. SHA1 has a reasonable length, I'd say. (let's avoid MD5, though ;-) )","files":null}]}